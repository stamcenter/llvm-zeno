//==- BuiltinsRISCV.def - RISC-V Builtin function database -------*- C++ -*-==//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file defines the RISC-V-specific builtin function database.  Users of
// this file must define the BUILTIN macro to make use of this information.
//
//===----------------------------------------------------------------------===//

#if defined(BUILTIN) && !defined(TARGET_BUILTIN)
#   define TARGET_BUILTIN(ID, TYPE, ATTRS, FEATURE) BUILTIN(ID, TYPE, ATTRS)
#endif

#include "clang/Basic/riscv_vector_builtins.inc"

// Zbb extension
TARGET_BUILTIN(__builtin_riscv_orc_b_32, "ZiZi", "nc", "experimental-zbb")
TARGET_BUILTIN(__builtin_riscv_orc_b_64, "WiWi", "nc", "experimental-zbb,64bit")

// Zbc extension
TARGET_BUILTIN(__builtin_riscv_clmul, "LiLiLi", "nc", "experimental-zbc")
TARGET_BUILTIN(__builtin_riscv_clmulh, "LiLiLi", "nc", "experimental-zbc")
TARGET_BUILTIN(__builtin_riscv_clmulr, "LiLiLi", "nc", "experimental-zbc")

// Zbe extension
TARGET_BUILTIN(__builtin_riscv_bcompress_32, "ZiZiZi", "nc", "experimental-zbe")
TARGET_BUILTIN(__builtin_riscv_bcompress_64, "WiWiWi", "nc",
               "experimental-zbe,64bit")
TARGET_BUILTIN(__builtin_riscv_bdecompress_32, "ZiZiZi", "nc",
               "experimental-zbe")
TARGET_BUILTIN(__builtin_riscv_bdecompress_64, "WiWiWi", "nc",
               "experimental-zbe,64bit")

// Zbp extension
TARGET_BUILTIN(__builtin_riscv_grev_32, "ZiZiZi", "nc", "experimental-zbp")
TARGET_BUILTIN(__builtin_riscv_grev_64, "WiWiWi", "nc", "experimental-zbp,64bit")
TARGET_BUILTIN(__builtin_riscv_gorc_32, "ZiZiZi", "nc", "experimental-zbp")
TARGET_BUILTIN(__builtin_riscv_gorc_64, "WiWiWi", "nc", "experimental-zbp,64bit")
TARGET_BUILTIN(__builtin_riscv_shfl_32, "ZiZiZi", "nc", "experimental-zbp")
TARGET_BUILTIN(__builtin_riscv_shfl_64, "WiWiWi", "nc", "experimental-zbp,64bit")
TARGET_BUILTIN(__builtin_riscv_unshfl_32, "ZiZiZi", "nc", "experimental-zbp")
TARGET_BUILTIN(__builtin_riscv_unshfl_64, "WiWiWi", "nc", "experimental-zbp,64bit")
TARGET_BUILTIN(__builtin_riscv_xperm_n, "LiLiLi", "nc", "experimental-zbp")
TARGET_BUILTIN(__builtin_riscv_xperm_b, "LiLiLi", "nc", "experimental-zbp")
TARGET_BUILTIN(__builtin_riscv_xperm_h, "LiLiLi", "nc", "experimental-zbp")
TARGET_BUILTIN(__builtin_riscv_xperm_w, "WiWiWi", "nc", "experimental-zbp,64bit")

// Zbr extension
TARGET_BUILTIN(__builtin_riscv_crc32_b, "LiLi", "nc", "experimental-zbr")
TARGET_BUILTIN(__builtin_riscv_crc32_h, "LiLi", "nc", "experimental-zbr")
TARGET_BUILTIN(__builtin_riscv_crc32_w, "LiLi", "nc", "experimental-zbr")
TARGET_BUILTIN(__builtin_riscv_crc32c_b, "LiLi", "nc", "experimental-zbr")
TARGET_BUILTIN(__builtin_riscv_crc32c_h, "LiLi", "nc", "experimental-zbr")
TARGET_BUILTIN(__builtin_riscv_crc32c_w, "LiLi", "nc", "experimental-zbr")
TARGET_BUILTIN(__builtin_riscv_crc32_d, "LiLi", "nc", "experimental-zbr")
TARGET_BUILTIN(__builtin_riscv_crc32c_d, "LiLi", "nc", "experimental-zbr")

// Zeno extension
// The following builtins rely on that char == 8 bits, short == 16 bits and that
// there exists native types on the target that are 32- and 64-bits wide, unless
// these conditions are fulfilled these builtins will operate on a not intended
// bitwidth.

// VERSION 1
// Ii is a integer immediate
// TARGET_BUILTIN(__builtin_riscv_zeno_set_ext,  "vIcWi", "nc", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_load_u8,  "UcUc*Ic", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_load_s8,  "ScSc*Ic", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_load_u16,  "UsUs*Ic", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_load_s16,  "SsSs*Ic", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_load_32,  "ZiZi*Ic", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_load_64,  "WiWi*Ic", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_store_8, "vc*Icc", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_store_16, "vs*Ics", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_store_32, "vZi*IcZi", "n", "experimental-zzeno")
// TARGET_BUILTIN(__builtin_riscv_zeno_store_64, "vWi*IcWi", "n", "experimental-zzeno")



// __builtin_zeno_get_nsid(ptr) -> nsid
// __builtin_zeno_set_nsid(ptr, nsid) -> ptr
// __builtin_zeno_loadu(ptr, nsid) -> value
// __builtin_zeno_store(ptr, nsid, value) -> void
// __builtin_zeno_load(ptr) -> value
// __builtin_zeno_store(ptr, value) -> void

TARGET_BUILTIN(__builtin_riscv_zeno_get_nsid,  "Wiv*", "nc", "experimental-zzeno")
TARGET_BUILTIN(__builtin_riscv_zeno_set_nsid,  "v*v*Wi", "nc", "experimental-zzeno")

// type checking done in Sema
TARGET_BUILTIN(__builtin_riscv_zeno_load,  "iv*.", "tnc", "experimental-zzeno")
TARGET_BUILTIN(__builtin_riscv_zeno_store,  "vv*.", "tnc", "experimental-zzeno")


#undef BUILTIN
#undef TARGET_BUILTIN
